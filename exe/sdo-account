#!/usr/bin/env ruby

#* for digits or alphabets
#! for digits 0-9
#? for alpabets a-z (case insensitive)

require 'open-uri'
require 'json'

$digits=(0..9).to_a.map &:to_s
$alphabets=('a'..'z').to_a

$match_pattern = {
  '*'=>$digits+$alphabets,
  '!'=>$digits,
  '?'=>$alphabets
}

def query(account)
  JSON.parse open("http://reguser.sdo.com/user/existence/username/#{account}.jsonp").readlines.join[1..-2]
end

#return ture if given account has not been registered and false else.
def available?(account)
  !query(account)["existing"]
end


def recursive_query(account)
  $match_pattern.keys.each do |key|
    value = $match_pattern[key]
    if index=account.index(key)
      value.each do |sub|
        tmp=account.dup
        tmp[index]=sub
        recursive_query(tmp)
      end
      return
    end
  end
  $stdout.puts account if available?(account)
end

begin
  recursive_query(ARGV.first)
rescue
  $stdout.puts '行为异常，当前网络可能已被暂时屏蔽！'
end
